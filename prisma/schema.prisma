// prisma/schema.prisma (VERSI LENGKAP & TERBARU)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String?
  email         String   @unique
  password_hash String?
  provider      String   @default("credentials")
  provider_id   String?  @unique
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  answers     UserAnswer[]
  // PERUBAHAN: Menjadi 'quizResults' untuk menandakan bisa lebih dari satu
  quizResults QuizResult[] 
}

model Question {
  id        Int      @id @default(autoincrement())
  text      String
  dimension String
  answers   UserAnswer[]
}

model UserAnswer {
  id          Int      @id @default(autoincrement())
  userId      Int
  questionId  Int
  answerValue Int
  createdAt   DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@unique([userId, questionId])
}

model QuizResult {
  id              Int      @id @default(autoincrement())
  userId          Int      // <-- @unique dihapus dari sini
  mbtiType        String
  recommendations Json
  createdAt       DateTime @default(now())

  // PERUBAHAN: Menambahkan kolom baru untuk fitur riwayat
  name            String?  // Opsional, agar pengguna bisa menamai hasil tesnya
  isArchived      Boolean  @default(false) // Untuk fitur arsip di masa depan

  // Relasi ke User
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}